{"ast":null,"code":"var _jsxFileName = \"/Users/Rayven/Documents/GitHub/flashcards-fe/frontend/src/components/login/login.js\";\nimport React from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase';\nimport './login.scss';\n\nconst Login = props => {\n  const uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: 'popup',\n    // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n    // signInSuccessUrl: '/dashboard',\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID, firebase.auth.FacebookAuthProvider.PROVIDER_ID, firebase.auth.EmailAuthProvider.PROVIDER_ID],\n    callbacks: {\n      signInSuccess: () => {\n        if (!firebase.auth().currentUser.emailVerified) {\n          firebase.auth().currentUser.sendEmailVerification().then(email => {\n            props.history.push('/dashboard');\n          }).catch(err => console.log(err));\n        } else {\n          firebase.auth().currentUser.getIdToken(true).then(token => {\n            console.log(firebase.auth().currentUser.uid);\n            props.history.push('/dashboard/settings');\n          });\n        }\n      }\n    }\n  };\n  return React.createElement(\"div\", {\n    className: \"login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Welcome to mNeme Flashcards!\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"An effective, fun, and easy to use flashcards app\")), React.createElement(StyledFirebaseAuth, {\n    uiConfig: uiConfig,\n    firebaseAuth: firebase.auth(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/Rayven/Documents/GitHub/flashcards-fe/frontend/src/components/login/login.js"],"names":["React","StyledFirebaseAuth","firebase","Login","props","uiConfig","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","EmailAuthProvider","callbacks","signInSuccess","currentUser","emailVerified","sendEmailVerification","then","email","history","push","catch","err","console","log","getIdToken","token","uid"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,OAAO,cAAP;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACrB,QAAMC,QAAQ,GAAG;AACf;AACAC,IAAAA,UAAU,EAAE,OAFG;AAGf;AACA;AACA;AACAC,IAAAA,aAAa,EAAE,CACbL,QAAQ,CAACM,IAAT,CAAcC,kBAAd,CAAiCC,WADpB,EAEbR,QAAQ,CAACM,IAAT,CAAcG,oBAAd,CAAmCD,WAFtB,EAGbR,QAAQ,CAACM,IAAT,CAAcI,iBAAd,CAAgCF,WAHnB,CANA;AAWfG,IAAAA,SAAS,EAAE;AACTC,MAAAA,aAAa,EAAE,MAAM;AACnB,YAAI,CAACZ,QAAQ,CAACM,IAAT,GAAgBO,WAAhB,CAA4BC,aAAjC,EAAgD;AAC9Cd,UAAAA,QAAQ,CACLM,IADH,GAEGO,WAFH,CAEeE,qBAFf,GAGGC,IAHH,CAGQC,KAAK,IAAI;AACbf,YAAAA,KAAK,CAACgB,OAAN,CAAcC,IAAd,CAAmB,YAAnB;AACD,WALH,EAMGC,KANH,CAMSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANhB;AAOD,SARD,MAQO;AACLrB,UAAAA,QAAQ,CACLM,IADH,GAEGO,WAFH,CAEeW,UAFf,CAE0B,IAF1B,EAGGR,IAHH,CAGQS,KAAK,IAAI;AACbH,YAAAA,OAAO,CAACC,GAAR,CAAYvB,QAAQ,CAACM,IAAT,GAAgBO,WAAhB,CAA4Ba,GAAxC;AACAxB,YAAAA,KAAK,CAACgB,OAAN,CAAcC,IAAd,CAAmB,qBAAnB;AACD,WANH;AAOD;AACF;AAnBQ;AAXI,GAAjB;AAiCA,SACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAFF,CADF,EAKE,oBAAC,kBAAD;AAAoB,IAAA,QAAQ,EAAEhB,QAA9B;AAAwC,IAAA,YAAY,EAAEH,QAAQ,CAACM,IAAT,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD,CA3CD;;AA6CA,eAAeL,KAAf","sourcesContent":["import React from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase';\n\nimport './login.scss';\n\nconst Login = props => {\n  const uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: 'popup',\n    // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n    // signInSuccessUrl: '/dashboard',\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n      firebase.auth.EmailAuthProvider.PROVIDER_ID\n    ],\n    callbacks: {\n      signInSuccess: () => {\n        if (!firebase.auth().currentUser.emailVerified) {\n          firebase\n            .auth()\n            .currentUser.sendEmailVerification()\n            .then(email => {\n              props.history.push('/dashboard');\n            })\n            .catch(err => console.log(err));\n        } else {\n          firebase\n            .auth()\n            .currentUser.getIdToken(true)\n            .then(token => {\n              console.log(firebase.auth().currentUser.uid);\n              props.history.push('/dashboard/settings');\n            });\n        }\n      }\n    }\n  };\n  return (\n    <div className='login'>\n      <div className='text'>\n        <h2>Welcome to mNeme Flashcards!</h2>\n        <p>An effective, fun, and easy to use flashcards app</p>\n      </div>\n      <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}