{"ast":null,"code":"import _slicedToArray from \"/Users/Rayven/Documents/GitHub/flashcards-fe/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Rayven/Documents/GitHub/flashcards-fe/frontend/src/components/dashboard/dashboard.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport DashNav from '../dashNav/dashNav';\nimport DeckCards from './deckcards/deckcards.js';\nimport { getDecks, getCards } from '../../actions';\nimport { connect } from 'react-redux';\nimport './dashboard.scss';\n\nconst Dashboard = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        deckArr = _useState2[0],\n        setDeckArr = _useState2[1];\n\n  useEffect(() => {\n    props.getDecks();\n  }, []);\n  useEffect(() => {\n    setDeckArr(props.decks);\n  }, [props.decks]);\n  return React.createElement(React.Fragment, null, React.createElement(\"section\", {\n    className: \"study-data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"timeline-selectors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Today\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"This Week\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Lifetime\")), React.createElement(\"div\", {\n    className: \"studied-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"numcard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"bignum\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"123\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Studied\")), React.createElement(\"div\", {\n    className: \"numcard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"bignum\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"123\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Mastered\")))), React.createElement(\"section\", {\n    className: \"decks-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"decks-selectors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Recent Decks\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"All Decks\")), deckArr.map(item => {\n    return React.createElement(DeckCards, {\n      key: item,\n      deckName: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    });\n  })), React.createElement(\"button\", {\n    className: \"bottom-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Create\"));\n};\n\nconst mapStateToProps = state => {\n  return {\n    cards: state.cards,\n    decks: state.decks,\n    isFetching: state.isFetching,\n    error: state.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getDecks,\n  getCards\n})(Dashboard);","map":{"version":3,"sources":["/Users/Rayven/Documents/GitHub/flashcards-fe/frontend/src/components/dashboard/dashboard.js"],"names":["React","useState","useEffect","Link","DashNav","DeckCards","getDecks","getCards","connect","Dashboard","props","deckArr","setDeckArr","decks","map","item","mapStateToProps","state","cards","isFetching","error"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,eAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,kBAAP;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAAA,oBACOT,QAAQ,CAAC,EAAD,CADf;AAAA;AAAA,QAChBU,OADgB;AAAA,QACPC,UADO;;AAEvBV,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,KAAK,CAACJ,QAAN;AACH,GAFQ,EAEN,EAFM,CAAT;AAIAJ,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,UAAU,CAACF,KAAK,CAACG,KAAP,CAAV;AACH,GAFQ,EAEN,CAACH,KAAK,CAACG,KAAP,CAFM,CAAT;AAIA,SACI,0CACI;AAAS,IAAA,SAAS,EAAC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CADJ,EAMI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,CADJ,EAKI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CALJ,CANJ,CADJ,EAmBI;AAAS,IAAA,SAAS,EAAC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,CADJ,EAMKF,OAAO,CAACG,GAAR,CAAYC,IAAI,IAAI;AACjB,WACI,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,IAAhB;AAAsB,MAAA,QAAQ,EAAEA,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH,GAJA,CANL,CAnBJ,EA+BI;AAAQ,IAAA,SAAS,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA/BJ,CADJ;AAmCH,CA7CD;;AA+CA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAE7B,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACC,KADV;AAEHL,IAAAA,KAAK,EAAEI,KAAK,CAACJ,KAFV;AAGHM,IAAAA,UAAU,EAAEF,KAAK,CAACE,UAHf;AAIHC,IAAAA,KAAK,EAAEH,KAAK,CAACG;AAJV,GAAP;AAMH,CARD;;AAUA,eAAeZ,OAAO,CAClBQ,eADkB,EAElB;AAAEV,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAFkB,CAAP,CAGbE,SAHa,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport DashNav from '../dashNav/dashNav';\nimport DeckCards from './deckcards/deckcards.js';\nimport { getDecks, getCards } from '../../actions';\nimport { connect } from 'react-redux';\nimport './dashboard.scss';\n\nconst Dashboard = props => {\n    const [deckArr, setDeckArr] = useState([]);\n    useEffect(() => {\n        props.getDecks();\n    }, []);\n\n    useEffect(() => {\n        setDeckArr(props.decks)\n    }, [props.decks])\n\n    return(\n        <>\n            <section className='study-data'>\n                <div className='timeline-selectors'> \n                    <span>Today</span>\n                    <span>This Week</span>\n                    <span>Lifetime</span>\n                </div>\n                <div className='studied-container'>\n                    <div className='numcard'>\n                        <p className='bignum'>123</p>\n                        <p>Studied</p>\n                    </div>\n                    <div className='numcard'>\n                        <p className='bignum'>123</p>\n                        <p>Mastered</p>\n                    </div>\n                </div>\n            </section>\n\n            <section className='decks-section'>\n                <div className='decks-selectors'>\n                    <span>Recent Decks</span>\n                    <span>All Decks</span>\n                </div>\n            \n                {deckArr.map(item => { \n                    return(\n                        <DeckCards key={item} deckName={item} />\n                    )\n                })}\n            </section>\n            <button className='bottom-button'>Create</button>\n        </>\n    )\n};\n\nconst mapStateToProps = state => {\n\n    return {\n        cards: state.cards,\n        decks: state.decks,\n        isFetching: state.isFetching,\n        error: state.error\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    { getDecks, getCards }\n)(Dashboard);"]},"metadata":{},"sourceType":"module"}