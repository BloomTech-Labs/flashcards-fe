{"ast":null,"code":"import _objectSpread from \"/Users/Rayven/Documents/GitHub/flashcards-fe/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { FETCH_START, FETCH_SUCCESS, FETCH_FAILURE, FETCH_CARDS, CARDS_SUCCESS, CARDS_FAILURE } from '../actions';\nconst initialState = {\n  decks: [],\n  cards: [],\n  isFetching: false,\n  error: ''\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_START:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        error: ''\n      });\n\n    case FETCH_SUCCESS:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: '',\n        decks: action.payload\n      });\n\n    case FETCH_FAILURE:\n      return _objectSpread({}, state, {\n        decks: [],\n        isFetching: false,\n        error: action.payload\n      });\n\n    case FETCH_CARDS:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        error: ''\n      });\n\n    case CARDS_SUCCESS:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: '',\n        decks: [],\n        cards: action.payload\n      });\n\n    case CARDS_FAILURE:\n      return _objectSpread({}, state, {\n        cards: [],\n        isFetching: false,\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/Rayven/Documents/GitHub/flashcards-fe/frontend/src/reducers/reducer.js"],"names":["FETCH_START","FETCH_SUCCESS","FETCH_FAILURE","FETCH_CARDS","CARDS_SUCCESS","CARDS_FAILURE","initialState","decks","cards","isFetching","error","reducer","state","action","type","payload"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,aAAtB,EAAqCC,aAArC,EAAoDC,WAApD,EAAiEC,aAAjE,EAAgFC,aAAhF,QAAqG,YAArG;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,UAAU,EAAE,KAHK;AAIjBC,EAAAA,KAAK,EAAE;AAJU,CAArB;;AAQA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAC9C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKd,WAAL;AACI,+BACOY,KADP;AAEIH,QAAAA,UAAU,EAAE,IAFhB;AAGIC,QAAAA,KAAK,EAAE;AAHX;;AAKJ,SAAKT,aAAL;AACI,+BACOW,KADP;AAEIH,QAAAA,UAAU,EAAE,KAFhB;AAGIC,QAAAA,KAAK,EAAE,EAHX;AAIIH,QAAAA,KAAK,EAAEM,MAAM,CAACE;AAJlB;;AAMJ,SAAKb,aAAL;AACI,+BACOU,KADP;AAEIL,QAAAA,KAAK,EAAE,EAFX;AAGIE,QAAAA,UAAU,EAAE,KAHhB;AAIIC,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAJlB;;AAMJ,SAAKZ,WAAL;AACI,+BACOS,KADP;AAEIH,QAAAA,UAAU,EAAE,IAFhB;AAGIC,QAAAA,KAAK,EAAE;AAHX;;AAKJ,SAAKN,aAAL;AACI,+BACOQ,KADP;AAEIH,QAAAA,UAAU,EAAE,KAFhB;AAGIC,QAAAA,KAAK,EAAE,EAHX;AAIIH,QAAAA,KAAK,EAAE,EAJX;AAKIC,QAAAA,KAAK,EAAEK,MAAM,CAACE;AALlB;;AAOJ,SAAKV,aAAL;AACI,+BACOO,KADP;AAEIJ,QAAAA,KAAK,EAAE,EAFX;AAGIC,QAAAA,UAAU,EAAE,KAHhB;AAIIC,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAJlB;;AAOJ;AAAS,aAAOH,KAAP;AA3Cb;AA6CH,CA9CD;;AAgDA,eAAeD,OAAf","sourcesContent":["import { FETCH_START, FETCH_SUCCESS, FETCH_FAILURE, FETCH_CARDS, CARDS_SUCCESS, CARDS_FAILURE } from '../actions';\n\nconst initialState = {\n    decks: [],\n    cards: [],\n    isFetching: false,\n    error: ''\n};\n\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type){\n        case FETCH_START:\n            return {\n                ...state,\n                isFetching: true,\n                error: ''\n            };\n        case FETCH_SUCCESS:\n            return {\n                ...state, \n                isFetching: false,\n                error: '',\n                decks: action.payload\n            };\n        case FETCH_FAILURE:\n            return {\n                ...state,\n                decks: [],\n                isFetching: false,\n                error: action.payload\n            }; \n        case FETCH_CARDS:\n            return {\n                ...state,\n                isFetching: true,\n                error: ''\n            };\n        case CARDS_SUCCESS:\n            return {\n                ...state,\n                isFetching: false,\n                error: '',\n                decks: [],\n                cards: action.payload\n            };\n        case CARDS_FAILURE: \n            return {\n                ...state, \n                cards: [], \n                isFetching: false,\n                error: action.payload\n            };\n        \n        default: return state;\n    }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}