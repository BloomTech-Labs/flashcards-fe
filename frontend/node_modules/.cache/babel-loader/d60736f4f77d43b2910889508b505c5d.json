{"ast":null,"code":"var _jsxFileName = \"/Users/Rayven/Documents/GitHub/flashcards-fe/frontend/src/components/decks/DeckList.js\";\nimport React, { useEffect } from 'react';\nimport Deck from './Deck';\nimport { connect } from 'react-redux';\nimport Loader from 'react-loader-spinner';\nimport styled from 'styled-components';\nimport { getDecks } from '../../actions';\n\nconst DeckList = props => {\n  useEffect(() => {\n    props.getDecks();\n  }, []);\n\n  if (props.isFetching) {\n    return (// <>\n      //     <h1>Your Decks!</h1>\n      //     <h2>Loading Your Decks!</h2>\n      // </>\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Your Decks!\"), React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(Loader, {\n        type: \"ThreeDots\",\n        color: \"orange\",\n        height: 80,\n        width: 80,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      })))\n    );\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Your Decks!\"), props.error && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, props.error), props.decks.map(deck => React.createElement(Deck, {\n    key: deck.id,\n    deck: deck,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = state => {\n  return {\n    decks: state.decks,\n    isFetching: state.isFetching,\n    error: state.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getDecks\n})(DeckList);\nconst Loading = styled.div`\n    margin-top: 10%;\n`;","map":{"version":3,"sources":["/Users/Rayven/Documents/GitHub/flashcards-fe/frontend/src/components/decks/DeckList.js"],"names":["React","useEffect","Deck","connect","Loader","styled","getDecks","DeckList","props","isFetching","error","decks","map","deck","id","mapStateToProps","state","Loading","div"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,eAAzB;;AAGA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAEtBP,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,KAAK,CAACF,QAAN;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAIE,KAAK,CAACC,UAAV,EAAsB;AAClB,WACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEQ,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,WAAb;AAAyB,QAAA,KAAK,EAAC,QAA/B;AAAwC,QAAA,MAAM,EAAE,EAAhD;AAAoD,QAAA,KAAK,EAAE,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAFR;AALA;AAYH;;AAED,SAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEKD,KAAK,CAACE,KAAN,IAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,KAAK,CAACE,KAAV,CAFpB,EAGKF,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IACjB,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAIA,IAAI,CAACC,EAAlB;AAAsB,IAAA,IAAI,EAAID,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAHL,CAFJ;AAWH,CAhCD;;AAkCA,MAAME,eAAe,GAAGC,KAAK,IAAI;AAE7B,SAAO;AACHL,IAAAA,KAAK,EAAEK,KAAK,CAACL,KADV;AAEHF,IAAAA,UAAU,EAAEO,KAAK,CAACP,UAFf;AAGHC,IAAAA,KAAK,EAAEM,KAAK,CAACN;AAHV,GAAP;AAKH,CAPD;;AASA,eAAeP,OAAO,CAClBY,eADkB,EAElB;AAAET,EAAAA;AAAF,CAFkB,CAAP,CAGbC,QAHa,CAAf;AAKA,MAAMU,OAAO,GAAGZ,MAAM,CAACa,GAAI;;CAA3B","sourcesContent":["import React, { useEffect } from 'react';\nimport Deck from './Deck';\nimport { connect } from 'react-redux';\nimport Loader from 'react-loader-spinner';\nimport styled from 'styled-components';\nimport { getDecks } from '../../actions';\n\n\nconst DeckList = props => {\n\n    useEffect(() => {\n        props.getDecks();\n    }, []);\n\n    if (props.isFetching) {\n        return(\n        // <>\n        //     <h1>Your Decks!</h1>\n        //     <h2>Loading Your Decks!</h2>\n        // </>\n        <div>\n            <h1>Your Decks!</h1>\n                <Loading>\n                <Loader type=\"ThreeDots\" color=\"orange\" height={80} width={80} />\n                </Loading>\n        </div>\n        ) \n    }\n\n    return(\n        \n        <div>\n            <h1>Your Decks!</h1>\n            {props.error && <p>{props.error}</p>}\n            {props.decks.map(deck =>(\n                <Deck key = {deck.id} deck = {deck} />\n            ))}\n        </div>\n       \n    )\n};\n\nconst mapStateToProps = state => {\n    \n    return {\n        decks: state.decks,\n        isFetching: state.isFetching,\n        error: state.error\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    { getDecks }\n)(DeckList);\n\nconst Loading = styled.div`\n    margin-top: 10%;\n`"]},"metadata":{},"sourceType":"module"}