{"ast":null,"code":"// import { axiosWithAuth } from '../utils/axiosWithAuth';\nimport axios from 'axios'; //ACTION FOR DECKS\n\nexport const FETCH_START = \"FETCH_START\";\nexport const FETCH_SUCCESS = \"FETCH_SUCCESS\";\nexport const FETCH_FAILURE = \"FETCH_FAILURE\"; //ACTION FOR CARDS\n\nexport const FETCH_CARDS = \"FETCH_CARDS\";\nexport const CARDS_SUCCESS = \"CARDS_SUCCESS\";\nexport const CARDS_FAILURE = \"CARDS_FAILURE\"; //GETTING DECKS\n\nexport const getDecks = () => dispatch => {\n  dispatch({\n    type: FETCH_START\n  });\n  axios.get('https://flashcards-be.herokuapp.com/api/demo/I2r2gejFYwCQfqafWlVy').then(response => {\n    dispatch({\n      type: FETCH_SUCCESS,\n      payload: response.data\n    });\n  }).catch(error => {\n    dispatch({\n      type: FETCH_FAILURE,\n      payload: error\n    });\n  });\n}; //GETTING CARDS FOR DECKS\n\nexport const getCards = deck => dispatch => {\n  console.log(deck);\n  dispatch({\n    type: FETCH_CARDS\n  });\n  axios.get(`https://flashcards-be.herokuapp.com/api/demo/I2r2gejFYwCQfqafWlVy/${deck}`).then(response => {\n    console.log(response.data.data);\n    dispatch({\n      type: CARDS_SUCCESS,\n      payload: response.data.data\n    });\n  }).catch(error => {\n    dispatch({\n      type: CARDS_FAILURE,\n      payload: error\n    });\n  });\n};","map":{"version":3,"sources":["/Users/Rayven/Documents/GitHub/flashcards-fe/frontend/src/actions/index.js"],"names":["axios","FETCH_START","FETCH_SUCCESS","FETCH_FAILURE","FETCH_CARDS","CARDS_SUCCESS","CARDS_FAILURE","getDecks","dispatch","type","get","then","response","payload","data","catch","error","getCards","deck","console","log"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB,C,CAGP;;AACA,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB,C,CAOP;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAMC,QAAQ,IAAI;AAEtCA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAER;AAAR,GAAD,CAAR;AAEAD,EAAAA,KAAK,CACJU,GADD,CACK,mEADL,EAECC,IAFD,CAEMC,QAAQ,IAAI;AACdJ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP,aAAR;AAAuBW,MAAAA,OAAO,EAAED,QAAQ,CAACE;AAAzC,KAAD,CAAR;AACH,GAJD,EAKCC,KALD,CAKOC,KAAK,IAAI;AACZR,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,aAAR;AAAuBU,MAAAA,OAAO,EAAEG;AAAhC,KAAD,CAAR;AACH,GAPD;AAQH,CAZM,C,CAcP;;AACA,OAAO,MAAMC,QAAQ,GAAIC,IAAD,IAAUV,QAAQ,IAAI;AAC1CW,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEAV,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAR;AAEAJ,EAAAA,KAAK,CACJU,GADD,CACM,qEAAoEQ,IAAK,EAD/E,EAECP,IAFD,CAEMC,QAAQ,IAAI;AACfO,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACE,IAAT,CAAcA,IAA1B;AACCN,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,aAAR;AAAuBQ,MAAAA,OAAO,EAAED,QAAQ,CAACE,IAAT,CAAcA;AAA9C,KAAD,CAAR;AACH,GALD,EAMCC,KAND,CAMOC,KAAK,IAAI;AACZR,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEH,aAAR;AAAuBO,MAAAA,OAAO,EAAEG;AAAhC,KAAD,CAAR;AACH,GARD;AASH,CAdM","sourcesContent":["// import { axiosWithAuth } from '../utils/axiosWithAuth';\nimport axios from 'axios';\n\n//ACTION FOR DECKS\nexport const FETCH_START = \"FETCH_START\"\nexport const FETCH_SUCCESS = \"FETCH_SUCCESS\"\nexport const FETCH_FAILURE = \"FETCH_FAILURE\"\n\n\n//ACTION FOR CARDS\nexport const FETCH_CARDS = \"FETCH_CARDS\"\nexport const CARDS_SUCCESS = \"CARDS_SUCCESS\"\nexport const CARDS_FAILURE = \"CARDS_FAILURE\"\n\n\n\n\n\n\n//GETTING DECKS\n\nexport const getDecks = () => dispatch => {\n\n    dispatch({ type: FETCH_START });\n\n    axios\n    .get('https://flashcards-be.herokuapp.com/api/demo/I2r2gejFYwCQfqafWlVy')\n    .then(response => {\n        dispatch({ type: FETCH_SUCCESS, payload: response.data})\n    })\n    .catch(error => {\n        dispatch({ type: FETCH_FAILURE, payload: error})\n    })\n};\n\n//GETTING CARDS FOR DECKS\nexport const getCards = (deck) => dispatch => {\n    console.log(deck)\n    \n    dispatch({ type: FETCH_CARDS});\n\n    axios\n    .get(`https://flashcards-be.herokuapp.com/api/demo/I2r2gejFYwCQfqafWlVy/${deck}`)\n    .then(response => {\n       console.log(response.data.data)\n        dispatch({ type: CARDS_SUCCESS, payload: response.data.data})\n    })\n    .catch(error => {\n        dispatch({ type: CARDS_FAILURE, payload: error})\n    })\n};\n\n"]},"metadata":{},"sourceType":"module"}